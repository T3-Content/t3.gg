---
interface Props {
  heading: string;
  sponsors: {
    name: string;
    link: string;
    image: string | (<P extends {}>(_props: P) => any);
    description: string;
  }[];
  className?: string;
}

const { heading, sponsors, className } = Astro.props;
---

<section class={className}>
  <h2 class="px-8 pb-4 text-2xl font-semibold">{heading}</h2>
  <div
    class="grid grid-cols-1 gap-8 px-4 md:grid-cols-2 md:px-8 lg:grid-cols-3"
  >
    {
      sponsors.map((brand) => (
        <a
          href={brand.link}
          class="group border-foreground/10 flex flex-row rounded-lg border p-6 transition duration-300 ease-out hover:bg-[white]/50 dark:hover:bg-[white]/5"
          target="_blank"
          rel="noopener noreferrer"
        >
          <div class="flex size-24 shrink-0 items-center justify-center self-center [&_svg]:size-full">
            {typeof brand.image === "string" ? (
              <img
                src={brand.image}
                alt={brand.name}
                width={96}
                height={96}
                class="size-24 object-contain"
              />
            ) : (
              <div role="img" aria-label={brand.name}>
                <brand.image />
              </div>
            )}
          </div>
          <div class="flex grow flex-col pl-6">
            <h2 class="text-foreground mb-2 text-xl font-semibold">
              {brand.name}
            </h2>
            <p class="text-foreground/65 grow" style="text-wrap: balance;">
              {brand.description}
            </p>
          </div>
        </a>
      ))
    }
  </div>
</section>
