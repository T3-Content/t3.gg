---
import { cn } from "../utils/cn";
import "../style/global.css";
import { ClientRouter } from "astro:transitions";
import LeftArrow from "../assets/icons/left-arrow.svg.astro";

// theme icons
import { LightModeIcon, DarkModeIcon } from "../assets/themes";

const socialLinks = [
  { href: "https://github.com/t3dotgg", label: "GitHub" },
  { href: "https://twitter.com/theo", label: "Twitter" },
  { href: "https://twitch.tv/theo", label: "Twitch" },
  { href: "https://discord.gg/xHdCpcPHRE", label: "Discord" },
];

const themeToggles = [
  { id: "light", icon: LightModeIcon },
  { id: "dark", icon: DarkModeIcon },
];

interface Props {
  title: string;
  description: string;
  classNames?: {
    html?: string;
    body?: string;
    main?: string;
    footer?: string;
  };
  backToLink?:
    | false
    | {
        text: string;
        href: string;
      };
}

const defaultBackToLink: Props["backToLink"] = {
  text: "back to theo's site",
  href: "/",
};

const {
  title,
  description,
  classNames,
  backToLink = defaultBackToLink,
} = Astro.props;
const isHomepage = Astro.url.pathname === "/";
---

<html
  lang="en"
  class={cn("bg-white dark:bg-black h-full", classNames?.html)}
  style="view-transition-name:root"
>
  <head>
    <ClientRouter />
    <script>
      import { setUpClientThemeScripts } from "../utils/theme";
      setUpClientThemeScripts();
    </script>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="/favicon.svg" />
    <meta name="description" content={description} />
    <meta name="twitter:image" content="https://t3.gg/images/twitter.png" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:creator" content="@t3dotgg" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="https://t3.gg/images/twitter.png" />
    <title>{title}</title>
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="black"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="white"
    />

    <script defer data-domain="astro.t3.gg" src="/js/script.js"></script>
  </head>
  <body class={cn("min-h-full", classNames?.body)}>
    <main
      class={cn("flex min-h-screen flex-col text-foreground", classNames?.main)}
    >
      <slot />
      {
        !isHomepage && backToLink && (
          <aside class="mb-8 text-center">
            <a
              href={backToLink.href}
              class="text-foreground/60 hover:text-foreground mt-8 -mb-4 inline-flex items-center justify-center gap-1 p-2 hover:underline"
            >
              <LeftArrow />
              {backToLink.text}
            </a>
          </aside>
        )
      }
      <footer
        class={cn(
          "[--space:--spacing(4)] sm:[--space:--spacing(8)]",
          "border-t border-foreground/10 pt-(--space) pb-safe-offset-(--space)",
          classNames?.footer,
        )}
      >
        <div class="container mx-auto px-4">
          <div class="flex w-full justify-center gap-x-[min(4vw,--spacing(6))]">
            {
              socialLinks.map((link) => (
                <a
                  href={link.href}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="hover:text-foreground text-foreground/75 transition-colors ease-out"
                >
                  {link.label}
                </a>
              ))
            }
            {
              themeToggles.map((toggle) => {
                return (
                  <button
                    type="button"
                    class={cn(
                      "hover:text-foreground text-foreground/75 appearance-none transition-colors ease-out",
                      "light:data-[theme-toggle='light']:hidden",
                      "dark:data-[theme-toggle='dark']:hidden",
                    )}
                    aria-label={`Set theme to ${toggle.id}`}
                    title={`Set theme to ${toggle.id}`}
                    data-theme-toggle={toggle.id}
                  >
                    <div class="pointer-events-none contents">
                      <toggle.icon class="size-[1em]" />
                    </div>
                  </button>
                );
              })
            }
          </div>
        </div>
      </footer>
    </main>
  </body>
</html>
